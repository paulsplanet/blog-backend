let jwt,User;_86d‍.x([["default",()=>_86d‍.o]]);_86d‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);_86d‍.w("../models/user",[["default",["User"],function(v){User=v}]]);


const jwtMiddleware = async (ctx, next) => {
    const token = ctx.cookies.get('access_token');
    if (!token) return next();
    try {
        const decoded = jwt.verify(token, process.env.JWT_SECRET);
        ctx.state.user = {
            _id: decoded._id,
            username: decoded.username,
        };
        const now = Math.floor(Date.now() / 1000);
        if (decoded.exp - now < 60*60*24*3.5) {
            const user = await User.findById(decoded._id);
            const token = user.generateToken();
            ctx.cookies.state('access_token', token, {
                maxAge: 1000*60*60*24*7,
                httpOnly: true,
            });
        } 
        // console.log(decoded);
        return next();
    } catch (e) {
        return next();
    }
};

_86d‍.d(jwtMiddleware);